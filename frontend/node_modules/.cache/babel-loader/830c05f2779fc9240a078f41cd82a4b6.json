{"ast":null,"code":"var _jsxFileName = \"/home/benjaminpaiva/Code/proyecto2022/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CardComp from './CardComp';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const loadingGif = 'https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif?20151024034921';\n  const posterDomain = 'https://images.justwatch.com';\n\n  const createExampleArray = () => {\n    let exampleArray = [];\n\n    for (let i = 0; i < 100; i++) {\n      exampleArray.push({\n        node: {\n          content: {\n            title: '',\n            posterUrl: loadingGif\n          }\n        }\n      });\n    }\n\n    return exampleArray;\n  };\n\n  const formatPosterUrl = () => {\n    if (data[0].node.content.posterUrl == loadingGif) {\n      return;\n    }\n\n    if (data[0].node.content.posterUrl.slice(0, 5) == 'https') {\n      return;\n    }\n\n    let array = data;\n\n    for (let i = 0; i < data.length; i++) {\n      //console.log(data[i].node.content.posterUrl);\n      array[i].node.content.posterUrl = array[i].node.content.posterUrl.replace('.{format}', '');\n      array[i].node.content.posterUrl = array[i].node.content.posterUrl.replace('{profile}', 's166');\n      array[i].node.content.posterUrl = posterDomain.concat(array[i].node.content.posterUrl);\n    }\n\n    setData(array);\n    console.log(data);\n  };\n\n  const [data, setData] = useState(createExampleArray());\n\n  const callApi = () => {\n    fetch('http://localhost:5000/buscar?plt=hbm&gnr=act,cmy').then(res => res.json()).then(setData);\n  }; // will need to change this to add the pictures\n  // from this: https://images.justwatch.com/poster/298192485/s166/house-of-the-dragon\n  // to this: /poster/298192485/{profile}/house-of-the-dragon.{format}\n\n\n  useEffect(callApi, []);\n  useEffect(formatPosterUrl, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [0, 1, 2, 3, 4].map(i => {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        texto: \"texto\",\n        children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(h => {\n          let num = +(i * 10) + h;\n          return /*#__PURE__*/_jsxDEV(CardComp, {\n            cardText: \"\",\n            cardTitle: data[num].node.content.title,\n            cardSubTitle: \"\",\n            cardImg: data[num].node.content.posterUrl\n          }, h, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"/+nkalLsn6zMxAW4LN5jq43MFxs=\");\n\n_c = Home;\nexport { Home };\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/benjaminpaiva/Code/proyecto2022/frontend/src/components/Home.js"],"names":["React","useEffect","useState","CardComp","Item","Home","loadingGif","posterDomain","createExampleArray","exampleArray","i","push","node","content","title","posterUrl","formatPosterUrl","data","slice","array","length","replace","concat","setData","console","log","callApi","fetch","then","res","json","map","h","num"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CardComp from './CardComp';\nimport Item from './Item';\n\nconst Home = () => {\n  const loadingGif =\n    'https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif?20151024034921';\n  const posterDomain = 'https://images.justwatch.com';\n\n  const createExampleArray = () => {\n    let exampleArray = [];\n    for (let i = 0; i < 100; i++) {\n      exampleArray.push({\n        node: {\n          content: {\n            title: '',\n            posterUrl: loadingGif,\n          },\n        },\n      });\n    }\n    return exampleArray;\n  };\n\n  const formatPosterUrl = () => {\n    if (data[0].node.content.posterUrl == loadingGif) {\n      return;\n    }\n\n    if (data[0].node.content.posterUrl.slice(0, 5) == 'https') {\n      return\n    }\n    let array = data;\n\n    for (let i = 0; i < data.length; i++) {\n      //console.log(data[i].node.content.posterUrl);\n      array[i].node.content.posterUrl = array[i].node.content.posterUrl.replace(\n        '.{format}',\n        '',\n      );\n      array[i].node.content.posterUrl = array[i].node.content.posterUrl.replace(\n        '{profile}',\n        's166',\n      );\n      array[i].node.content.posterUrl = posterDomain.concat(\n        array[i].node.content.posterUrl,\n      );\n    }\n    setData(array);\n    console.log(data);\n  };\n\n  const [data, setData] = useState(createExampleArray());\n\n  const callApi = () => {\n    fetch('http://localhost:5000/buscar?plt=hbm&gnr=act,cmy')\n      .then((res) => res.json())\n      .then(setData);\n  };\n\n  // will need to change this to add the pictures\n  // from this: https://images.justwatch.com/poster/298192485/s166/house-of-the-dragon\n  // to this: /poster/298192485/{profile}/house-of-the-dragon.{format}\n\n  useEffect(callApi, []);\n  useEffect(formatPosterUrl, [data]);\n\n  return (\n    <div className=\"home\">\n      {[0, 1, 2, 3, 4].map((i) => {\n        return (\n          <Item key={i} texto=\"texto\">\n            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((h) => {\n              let num = +(i * 10) + h;\n              return (\n                <CardComp\n                  key={h}\n                  cardText=\"\"\n                  cardTitle={data[num].node.content.title}\n                  cardSubTitle=\"\"\n                  cardImg={data[num].node.content.posterUrl}\n                ></CardComp>\n              );\n            })}\n          </Item>\n        );\n      })}\n    </div>\n  );\n};\n\nexport { Home };\n"]},"metadata":{},"sourceType":"module"}